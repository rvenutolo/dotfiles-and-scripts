# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

format = """
$username\
$hostname\
$localip\
$shlvl\
$kubernetes\
$directory\
$git_branch\
$git_commit\
$git_state\
$git_status\
$docker_context\
$package\
$c\
$golang\
$haskell\
$java\
$kotlin\
$lua\
$nodejs\
$perl\
$python\
$ruby\
$rust\
$scala\
$terraform\
$memory_usage\
$cmd_duration\
$line_break\
$jobs\
$battery\
$time\
$status\
$container\
$character"""
right_format = "" # default: ""
scan_timeout = 30 # ms, default: 30
command_timeout = 500 # ms, default: 500
add_newline = true # default: true

#continuation_prompt = '[∙](bright-black)' # default
continuation_prompt = "▶▶"

[aws]
format = 'on [$symbol($profile )(\($region\) )(\[$duration\] )]($style)' # default
#format = '\[[$symbol($profile)(\($region\))(\[$duration\])]($style)\]' # bracketed segments
#symbol = "☁️ " # default
symbol = "  " # nerd font
force_display = false # default: false
disabled = true # default: false

[battery]
format = "[$symbol$percentage]($style) " # default
disabled = false # default: false

[c]
format = "via [$symbol($version(-$name) )]($style)" # default
#format = '\[[$symbol($version(-$name))]($style)\]' # bracketed segments
version_format = "v${raw}" # available vars are 'raw', 'major', 'minor', & 'patch', default: 'v${raw}'
#symbol = "C " # default
symbol = " " # nerd font
disabled = false # default: false

[character]
format = "$symbol " # default
success_symbol = '[❯](bold green)'
error_symbol = '[❯](bold red)'
disabled = false # default: false

[cmd_duration]
format = "took [$duration]($style) " # default
min_time = 0 #ms, default: 2_000
show_milliseconds = false # default: false
show_notifications = false # show desktop notifications when command completes, default: false
min_time_to_notify = 45_000 # ms, default: 45_000
disabled = false # default: false

[container]
format = '[$symbol \[$name\]]($style) ' # default
symbol = "⬢" # default
disabled = false # default: false

[directory]
format = "[$path]($style)[$read_only]($read_only_style) " # default
repo_root_format = "[$before_root_path]($style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style) " # default
#read_only	= "🔒" # default
read_only = " " # nerd font
home_symbol = "~" # default: "~"
truncation_length = 3 # default: 3
truncate_to_repo = true # default: true
truncation_symbol = "" # default: ""
disabled = false # default: false

[docker_context]
format = "via [$symbol$context]($style) " # default
#format = '\[[$symbol$context]($style)\]' # bracketed segments
#symbol	= "🐳 " # default
symbol = " " # nerd font
disabled = false # default: false

[fill]
symbol = "." # default
disabled = false # default: false

[git_branch]
format = "on [$symbol$branch(:$remote_branch)]($style) " # default
#format = '\[[$symbol$branch]($style)\]' # bracketed segments
#symbol = " " # default
symbol = " " # nerd font
always_show_remote = false # default: false
truncation_symbol = "…" # default: "…"
only_attached = false # default: false
disabled = false # default: false

[git_commit]
format = '[\($hash$tag\)]($style) ' # default
commit_hash_length = 7 # default: 7
only_detached = true # default: true
tag_disabled = true # default: true
tag_symbol = " 🏷 " # default
disabled = false # default: false

[git_state]
format = '\([$state( $progress_current/$progress_total)]($style)\) ' # default
disabled = false # default: false

[git_metrics]
format = "([+$added]($added_style) )([-$deleted]($deleted_style) )" # default
only_nonzero_diffs = true # default: true
disabled = true # default: true

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )' # default
#format = '([\[$all_status$ahead_behind\]]($style))' # bracketed segments
ignore_submodules = false
disabled = false

[golang]
format = "via [$symbol($version )]($style)" # default
#format = '\[[$symbol($version)]($style)\]' # bracketed segments
version_format = "v${raw}" # available vars are 'raw', 'major', 'minor', & 'patch', default: 'v${raw}'
#symbol = "🐹 " # default
symbol = " " # nerd font
disabled = false # default: false

[haskell]
format = "via [$symbol($version )]($style)" # default
#format = '\[[$symbol($version)]($style)\]' # bracketed segments
#symbol = "λ " # default
symbol = " " # nerd font
disabled = false # default: false

[hostname]
format = "[$ssh_symbol$hostname]($style) in " # default
ssh_only = true # default: true
ssh_symbol = "🌐 " # default
trim_at = "." # default: "."
disabled = false # default: false

[java]
format = "via [${symbol}(${version} )]($style)" # default
#format = '\[[$symbol($version)]($style)\]' # bracketed segments
version_format = "v${raw}" # available vars are 'raw', 'major', 'minor', & 'patch', default: 'v${raw}'
#symbol = "☕ " # default
symbol = " " # nerd font
disabled = false # default: false

[jobs]
format = "[$symbol$number]($style) " # default
symbol = "✦" # default
symbol_threshold = 2 # default: 1
number_threshold = 2 # default: 2
disabled = false # default: false

[kotlin]
format = "via [$symbol($version )]($style)" # default
#format = '\[[$symbol($version)]($style)\]' # bracketed segments
version_format = "v${raw}" # available vars are 'raw', 'major', 'minor', & 'patch', default: 'v${raw}'
symbol = "🅺 " # default
disabled = false

[kubernetes]
format = '[$symbol$context( \($namespace\))]($style) in ' # default
#format = '\[[$symbol$context( \($namespace\))]($style)\]' # bracketed segments
symbol = "☸ " # default
disabled = false # default: false

[line_break]
disabled = false # default: false

[localip]
format = "[$localipv4]($style) " # default
ssh_only = true # default: true
disabled = false # default: true

[lua]
format = "via [$symbol($version )]($style)" # default
#format = '\[[$symbol($version)]($style)\]' # bracketed segments
version_format = "v${raw}" # available vars are 'raw', 'major', 'minor', & 'patch', default: 'v${raw}'
#symbol = "🌙 " # default
symbol = " " # nerd font
disabled = false # default: false

[memory_usage]
#format = 'via $symbol [${ram}( | ${swap})]($style) ' # default
format = 'via $symbol [${ram}]($style) ' # default
#format = '\[$symbol[$ram( | $swap)]($style)\]' # bracketed segments
#symbol = "🐏" # default
symbol = " " # nerd font
threshold = 1 # default: 75
disabled = false # default: true

[nodejs]
format = "via [$symbol($version )]($style)" # default
#format = '\[[$symbol($version)]($style)\]' # bracketed segments
version_format = "v${raw}" # available vars are 'raw', 'major', 'minor', & 'patch', default: 'v${raw}'
#symbol = " " # default
symbol = " " # nerd font
disabled = false # default: false

[package]
format = "is [$symbol$version]($style) " # default
#format = '\[[$symbol$version]($style)\]' # bracketed segments
version_format = "v${raw}" # available vars are 'raw', 'major', 'minor', & 'patch', default: 'v${raw}'
#symbol = "📦 " # default
symbol = " " # nerd font
display_private = false # default: false
disabled = false # default: false

[perl]
format = "via [$symbol($version )]($style)" # default
#format = '\[[$symbol($version)]($style)\]' # bracketed segments
version_format = "v${raw}" # available vars are 'raw', 'major', 'minor', & 'patch', default: 'v${raw}'
symbol = "🐪 " # default
disabled = false # default: false

[python]
format = 'via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)' # default
#format = '\[[${symbol}${pyenv_prefix}(${version})(\($virtualenv\))]($style)\]' # bracketed segments
version_format = "v${raw}" # available vars are 'raw', 'major', 'minor', & 'patch', default: 'v${raw}'
#symbol = "🐍 " # default
symbol = " " # nerd font
pyenv_version_name = false # default: false
disabled = false # default: false

[ruby]
format = "via [$symbol($version )]($style)" # default
#format = '\[[$symbol($version)]($style)\]' # bracketed segments
version_format = "v${raw}" # available vars are 'raw', 'major', 'minor', & 'patch', default: 'v${raw}'
#symbol = "💎 " # default
symbol = " " # nerd font
disabled = false # default: false

[rust]
format = "via [$symbol($version )]($style)" # default
#format = '\[[$symbol($version)]($style)\]' # bracketed segments
version_format = "v${raw}" # available vars are 'raw', 'major', 'minor', & 'patch', default: 'v${raw}'
#symbol = "🦀 " # default
symbol = " " # nerd font
disabled = false # default: false

[scala]
format = "via [${symbol}(${version} )]($style)" # default
#format = '\[[$symbol($version)]($style)\]' # bracketed segments
version_format = "v${raw}" # available vars are 'raw', 'major', 'minor', & 'patch', default: 'v${raw}'
#symbol = "🆂 " # default
symbol = " " # nerd font
disabled = false # default: false

[shell]
format = "[$indicator]($style) " # default
disabled = true # default: true

[shlvl]
format = "[$symbol$shlvl]($style) " # default
symbol = "↕️ " # default
repeat = false # default: false
threshold = 2 # default: 2
disabled = false #  # default: true

[status]
format = "[$symbol$status]($style) " # default
recognize_signal_code	= true # default: true
map_symbol = false # default: false
pipestatus = false # default: false
pipestatus_format ='\[$pipestatus\] => [$symbol$common_meaning$signal_name$maybe_int]($style)' # default
disabled = false # default: true

[sudo]
format = "[as $symbol]($style)" # default
#format = '\[[as $symbol]\]' # bracketed segments
symbol = "🧙 " # default
disabled = true # default: true

[terraform]
format = "via [$symbol$workspace]($style) " # default
#format = '\[[$symbol$workspace]($style)\]' # bracketed segments
version_format = "v${raw}" # available vars are 'raw', 'major', 'minor', & 'patch', default: 'v${raw}'
symbol = "💠" # default
disabled = false # default: false

[time]
format = "at [$time]($style) " # default
#format = '\[[$time]($style)\]' # bracketed segments
use_12hr = false # default: false
disabled = false # default: true

[username]
format = "[$user]($style) in " # default
#format = '\[[$user]($style)\]' # bracketed segments
show_always = true # default: false
disabled = false # default: false
