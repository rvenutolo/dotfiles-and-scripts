#!/usr/bin/env bash

# +-----------------+
# + Git Integration +
# +-----------------+
# +--- Dirty State ---+
# Show unstaged (*) and staged (+) changes.
# Also configurable per repository via "bash.showDirtyState".
GIT_PS1_SHOWDIRTYSTATE=true

# +--- Stash State ---+
# Show currently stashed ($) changes.
GIT_PS1_SHOWSTASHSTATE=true

# +--- Untracked Files ---+
# Show untracked (%) changes.
# Also configurable per repository via "bash.showUntrackedFiles".
GIT_PS1_SHOWUNTRACKEDFILES=true

# +--- Upstream Difference ---+
# Show indicator for difference between HEAD and its upstream.
#
# <  Behind upstream
# >  Ahead upstream
# <> Diverged upstream
# =  Equal upstream
#
# Control behaviour by setting to a space-separated list of values:
#   auto     Automatically show indicators
#   verbose  Show number of commits ahead/behind (+/-) upstream
#   name     If verbose, then also show the upstream abbrev name
#   legacy   Do not use the '--count' option available in recent versions of git-rev-list
#   git      Always compare HEAD to @{upstream}
#   svn      Always compare HEAD to your SVN upstream
#
# By default, __git_ps1 will compare HEAD to SVN upstream ('@{upstream}' if not available).
# Also configurable per repository via "bash.showUpstream".
GIT_PS1_SHOWUPSTREAM=""

# +--- Describe Style ---+
# Show more information about the identity of commits checked out as a detached HEAD.
#
# Control behaviour by setting to one of these values:
#   contains  Relative to newer annotated tag (v1.6.3.2~35)
#   branch    Relative to newer tag or branch (master~4)
#   describe  Relative to older annotated tag (v1.6.3.1-13-gdd42c2f)
#   default   Exactly matching tag
GIT_PS1_DESCRIBE_STYLE="contains"

# +--- Colored Hints ---+
# Show colored hints about the current dirty state. The colors are based on the colored output of "git status -sb".
# NOTE: Only available when using __git_ps1 for PROMPT_COMMAND!
GIT_PS1_SHOWCOLORHINTS=false

# +--- pwd Ignore ---+
# Disable __git_ps1 output when the current directory is set up to be ignored by git.
# Also configurable per repository via "bash.hideIfPwdIgnored".
GIT_PS1_HIDE_IF_PWD_IGNORED=false

__prompt_command() {

  local exit_code="$?"

  ## nord color theme assumed
  local reset='\[\e[0m\]'
  local grey='\[\e[1;30m\]'
  local red='\[\e[1;31m\]'
  local green='\[\e[1;32m\]'
  local yellow='\[\e[1;33m\]'
  local blue='\[\e[1;34m\]'
  local purple='\[\e[1;35m\]'
  local cyan='\[\e[1;36m\]'
  local white='\[\e[1;37m\]'

  local nonzero_color="${red}"
  local user_color="${blue}"
  local at_color="${white}"
  local host_color="${blue}"
  local arrow_color="${white}"
  local dir_color="${cyan}"
  local branch_icon_color="${white}"
  local branch_color="${purple}"
  local timestamp_color="${cyan}"
  local prompt_color="${white}"

  if [[ "${USER}" == 'root' ]]; then
    user_color="${red}"
  fi

  local nonzero_exit="${nonzero_color}Non-zero exit code: ${exit_code}"
  local user="${user_color}\u"
  local at="${at_color}@"
  local host="${host_color}\h"
  local arrow="${arrow_color}→"
  local dir="${dir_color}\w"
  GIT_PS1_STATESEPARATOR='|'
  local git_status="\$(__git_ps1 ' ${branch_icon_color} ${branch_color}%s${reset}')"
  local timestamp="${timestamp_color}\D{%I:%M:%S}"
  local prompt="${prompt_color}\\$"

  PS1=""
  if [[ "$exit_code" != 0 ]]; then
    PS1+="${nonzero_exit}\n"
  fi
  if [[ -n "${SSH_CONNECTION}" ]] || [[ "${USER}" == 'root' ]] || [[ "${LOGNAME}" != "${USER}" ]]; then
    PS1+="${user}${at}${host} "
  fi
  PS1+="${arrow} ${dir}${git_status}\n"
  PS1+="${timestamp} ${prompt}${reset} "
  PS1+=""

  PS2=""
  PS2+="  ${arrow} "
  PS2+="${reset}"

}

PROMPT_COMMAND=__prompt_command
PROMPT_COMMAND=${PROMPT_COMMAND:+$PROMPT_COMMAND; }'printf "\033]0;%s@%s:%s\007" "${USER}" "${HOSTNAME%%.*}" "${PWD/#${HOME}/\~}"'
